{"version":3,"file":"component---src-templates-subjects-js-99c4f4f23a566c3b9668.js","mappings":"yHAMA,MAAMA,EAAaC,IAAsB,IAArB,YAAEC,GAAaD,EACjC,MAAM,iBAAEE,EAAgB,aAAEC,GAAiBF,EAC3C,OACEG,EAAAA,cAAA,OAAKC,UAAW,IACdD,EAAAA,cAAA,OAAKC,UAAW,IACbH,GAAoBE,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIL,GAAkB,kBAGnDE,EAAAA,cAAA,OAAKC,UAAW,IACbF,GAAgBC,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIJ,GAAc,kBAEvC,EAQVJ,EAAWS,aAAe,CACxBP,YAAa,CAAC,GAGhB,K,uGCnBA,MAAMQ,EAAqBT,IAAA,IAAC,UAAEU,EAAS,QAAEC,EAAO,SAAEC,GAAUZ,EAAA,OAC1DU,EAAYC,EAAQC,GAAYA,CAAQ,EAoF1C,UAlFqBC,IAA4B,IAA3B,KAAEC,EAAI,YAAEb,GAAaY,EACzC,MAAME,EAAQD,EAAKE,kBAAkBC,OAC/B,QAAEC,GAAYjB,EACpBkB,QAAQC,IAAInB,GAEZ,IAAIoB,EAAU,WAKd,OAJIH,IACFG,EAAU,eAAkBH,EAAO,KAInCd,EAAAA,cAACkB,EAAAA,EAAM,KASLlB,EAAAA,cAAA,WAASC,UAAW,IAClBD,EAAAA,cAAA,UAAKiB,GACLjB,EAAAA,cAAA,UACGW,EAAMQ,KAAI,CAAAC,EAAoBC,KAAK,IAAtBC,KAAMC,GAASH,EAAA,OAC3BpB,EAAAA,cAAA,MAAIwB,IAAKH,EAAOpB,UAAW,IACxBsB,EAAQE,YAAYC,SACnB1B,EAAAA,cAAA,UAAQC,UAAW,IACjBD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIoB,EAAQI,OAAOC,MACvB5B,EAAAA,cAAC6B,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAASR,EAAQE,YAAYC,SACpCM,IAAKT,EAAQE,YAAYQ,UAKjCjC,EAAAA,cAACK,EACC,CACAC,UAAWiB,EAAQE,YAAYC,QAC/BnB,QAASC,GACPR,EAAAA,cAAA,OAAKC,UAAW,IAAKO,IAGvBR,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIoB,EAAQI,OAAOC,MACvB5B,EAAAA,cAAA,MAAIC,UAAW,IACZsB,EAAQE,YAAYQ,QAIzBjC,EAAAA,cAAA,OAAKC,UAAW,IAAI,MACdsB,EAAQE,YAAYS,OAAO,cAAY,IAC1C,IAAIC,KAAKZ,EAAQE,YAAYW,MAAMC,mBAClC,QACA,CACEC,MAAO,OACPC,IAAK,UACLC,KAAM,YAEP,KAELxC,EAAAA,cAAA,OAAKC,UAAW,IAAI,eACL,IACZsB,EAAQE,YAAYX,QAAQK,KAAI,CAACL,EAASO,IAAU,CACnDA,EAAQ,GAAK,KACbrB,EAAAA,cAACE,EAAAA,KAAI,CAACsB,IAAKH,EAAOlB,GAAE,aAAesC,IAAY3B,IAC5CA,OAIPd,EAAAA,cAAA,OACEC,UAAW,GACXyC,wBAAyB,CAAEC,OAAQpB,EAAQqB,YAG5C,MAIX5C,EAAAA,cAACL,EAAAA,EAAU,CAACE,YAAaA,IAClB,C","sources":["webpack://blog/./src/components/Pagination.js","webpack://blog/./src/templates/subjects.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\n// import * as styles from \"./pagination.module.css\"\n\nconst Pagination = ({ pageContext }) => {\n  const { previousPagePath, nextPagePath } = pageContext\n  return (\n    <nav className={\"\"}>\n      <div className={\"\"}>\n        {previousPagePath && <Link to={previousPagePath}>← Newer Posts</Link>}\n      </div>\n\n      <div className={\"\"}>\n        {nextPagePath && <Link to={nextPagePath}>Older Posts →</Link>}\n      </div>\n    </nav>\n  )\n}\n\nPagination.propTypes = {\n  pageContext: PropTypes.object.isRequired,\n}\n\nPagination.defaultProps = {\n  pageContext: {},\n}\n\nexport default Pagination\n","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/Layout\"\n// import Seo from \"../components/Seo\"\nimport Pagination from \"../components/Pagination\"\n\n// Component to place a conditional wrapper around content.\nconst ConditionalWrapper = ({ condition, wrapper, children }) =>\n  condition ? wrapper(children) : children\n\nconst SubjectIndex = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.edges\n  const { subject } = pageContext\n  console.log(pageContext)\n\n  let pageHeader = `Articles`\n  if (subject) {\n    pageHeader = `Filed under ${subject}:`\n  }\n\n  return (\n    <Layout>\n      {/*<Seo*/}\n      {/*  title={`All articles on the subject \"${subject}\"`}*/}\n      {/*  description=\"All articles filed under this subject.\"*/}\n      {/*  image=\"/logo.png\"*/}\n      {/*  pathname={`/subjects/${subject}`}*/}\n      {/*  // Boolean indicating whether this is an article:*/}\n      {/*  // article*/}\n      {/*/>*/}\n      <section className={\"\"}>\n        <h2>{pageHeader}</h2>\n        <ul>\n          {posts.map(({ node: article }, index) => (\n            <li key={index} className={\"\"}>\n              {article.frontmatter.featimg && (\n                <figure className={\"\"}>\n                  <Link to={article.fields.slug}>\n                    <GatsbyImage\n                      image={getImage(article.frontmatter.featimg)}\n                      alt={article.frontmatter.title}\n                    />\n                  </Link>\n                </figure>\n              )}\n              <ConditionalWrapper\n                // If featured image, wrap content in <div>.\n                condition={article.frontmatter.featimg}\n                wrapper={children => (\n                  <div className={\"\"}>{children}</div>\n                )}\n              >\n                <Link to={article.fields.slug}>\n                  <h1 className={\"\"}>\n                    {article.frontmatter.title}\n                  </h1>\n                </Link>\n\n                <div className={\"\"}>\n                  by {article.frontmatter.author}. Published{\" \"}\n                  {new Date(article.frontmatter.date).toLocaleDateString(\n                    \"en-US\",\n                    {\n                      month: \"long\",\n                      day: \"numeric\",\n                      year: \"numeric\",\n                    }\n                  )}{\" \"}\n                </div>\n                <div className={\"\"}>\n                  Filed under:{\" \"}\n                  {article.frontmatter.subject.map((subject, index) => [\n                    index > 0 && \", \",\n                    <Link key={index} to={`/subjects/${_.kebabCase(subject)}`}>\n                      {subject}\n                    </Link>,\n                  ])}\n                </div>\n                <div\n                  className={\"\"}\n                  dangerouslySetInnerHTML={{ __html: article.excerpt }}\n                />\n              </ConditionalWrapper>\n            </li>\n          ))}\n        </ul>\n      </section>\n      <Pagination pageContext={pageContext} />\n    </Layout>\n  )\n}\n\nexport default SubjectIndex\n\nexport const query = graphql`\n  query ($subject: String!, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { subject: { in: [$subject] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          excerpt\n          id\n          frontmatter {\n            title\n            date\n            subject\n            author\n            featimg {\n              childImageSharp {\n                gatsbyImageData(width: 400, height: 400, placeholder: BLURRED)\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Pagination","_ref","pageContext","previousPagePath","nextPagePath","React","className","Link","to","defaultProps","ConditionalWrapper","condition","wrapper","children","_ref2","data","posts","allMarkdownRemark","edges","subject","console","log","pageHeader","Layout","map","_ref3","index","node","article","key","frontmatter","featimg","fields","slug","GatsbyImage","image","getImage","alt","title","author","Date","date","toLocaleDateString","month","day","year","_kebabCase","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}